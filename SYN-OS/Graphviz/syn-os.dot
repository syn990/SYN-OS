digraph SYNOS_Expanded_Flow_Dark_v3 {
  rankdir=TB;
  bgcolor="#000000";

  node [
    shape=box,
    style="rounded,filled",
    fillcolor="#2c0101",
    color="#800000",
    fontcolor="white",
    fontsize=8
  ];

  edge [
    color="#AAAAAA",
    fontcolor="white",
    fontsize=7
  ];

  // Live shell with autologin note
  subgraph cluster_shell {
    label="Live Shell";
    style="rounded";
    color="#444444";
    fontcolor="white";
    file_zshrc [shape=note, fillcolor="#260101", label=".zshrc (ISO)"];
    root_zsh  [shape=note, fillcolor="#260101", label=".zshrc banner & warning\nsyntax990 alias runs installer"];
    run_alias [shape=oval, fillcolor="#400101", label="Run syntax990"];
    autologin [shape=note, fillcolor="#260101", label="Archiso autologin logs in as root\nand launches zsh, which sources .zshrc"];
    file_zshrc -> root_zsh [style=dotted, color="#888888", label="file"];
    dotfiles -> file_zshrc [style=dotted, color="#888888", label="from overlay"];
    autologin -> root_zsh [style=dotted, color="#888888", label="executes"];
    root_zsh -> run_alias;
  }

  // Disk variables
  disk_vars [shape=note, fillcolor="#260101", label="Disk vars:\nWIPE_DISK_990=/dev/vda\nBOOT_PART_990=/dev/vda1\nROOT_PART_990=/dev/vda2\nBOOT_MOUNT=/mnt/boot\nROOT_MOUNT=/mnt\nBOOT_FS=fat32\nROOT_FS=f2fs"];

  // Package arrays
  subgraph cluster_pkg {
    label="Package arrays";
    style="rounded";
    color="#444444";
    fontcolor="white";
    core      [shape=note, fillcolor="#260101", label="coreSystem:\n base, base-devel, linux,\n linux-firmware, archlinux-keyring,\n zsh, zsh-completions,\n zsh-syntax-highlighting, fzf,\n zoxide, ripgrep, fd, bat, sudo"];
    services  [shape=note, fillcolor="#260101", label="services:\n dhcpcd, dnsmasq, hostapd, iwd, reflector"];
    envshell  [shape=note, fillcolor="#260101", label="environmentShell:\n openbox, archlinux-xdg-menu,\n xorg-server, xorg-xinit, polybar,\n lxrandr, qt5ct, qt6ct, kvantum,\n kvantum-qt5, xcompmgr, feh, kitty,\n inetutils, obconf-qt, rofi,\n python-pywal, calc"];
    apps      [shape=note, fillcolor="#260101", label="userApplications:\n nano, git, htop, pcmanfm-qt, engrampa, kwrite"];
    devtools  [shape=note, fillcolor="#260101", label="developerTools:\n gcc, fakeroot, android-tools,\n archiso, binwalk, hexedit, lshw,\n yt-dlp"];
    fonts     [shape=note, fillcolor="#260101", label="fontsLocalization:\n terminus-font,\n ttf-bitstream-vera,\n ttf-dejavu, noto-fonts,\n noto-fonts-emoji,\n noto-fonts-cjk, ttf-liberation"];
    optional  [shape=note, fillcolor="#260101", label="optionalFeatures:\n vlc, audacity,\n obs-studio, chromium,\n gimp, kdenlive"];
    synstall  [shape=note, fillcolor="#260101", label="SYNSTALL"];
    core     -> synstall [style=dotted, color="#888888"];
    services -> synstall [style=dotted, color="#888888"];
    envshell -> synstall [style=dotted, color="#888888"];
    apps     -> synstall [style=dotted, color="#888888"];
    devtools -> synstall [style=dotted, color="#888888"];
    fonts    -> synstall [style=dotted, color="#888888"];
    optional -> synstall [style=dotted, color="#888888"];
  }

  // Dotfile overlay node
  dotfiles [shape=note, fillcolor="#260101", label="DotfileOverlay\n• Contains config files:\n  .xinitrc, openbox configs,\n  polybar configs, etc."];

  // Additional file boxes
  file_syn_disk    [shape=note, fillcolor="#260101", label="syn-disk-config.zsh"];
  file_syn_pkg     [shape=note, fillcolor="#260101", label="syn-packages.zsh"];
  file_stage0      [shape=note, fillcolor="#260101", label="syn-stage0.zsh script"];
  file_stage1      [shape=note, fillcolor="#260101", label="syn-stage1.zsh script"];
  file_stage1_vars [shape=note, fillcolor="#260101", label="syn-stage1 variables"];
  file_xinitrc        [shape=note, fillcolor="#260101", label=".xinitrc"];
  file_ob_autostart   [shape=note, fillcolor="#260101", label="openbox autostart"];
  file_poly_launch    [shape=note, fillcolor="#260101", label="polybar launch.sh"];
  file_poly_config    [shape=note, fillcolor="#260101", label="polybar config"];
  download_iso        [shape=note, fillcolor="#260101", label="Download pre-built ISO"];

  // ISO Build stage
  subgraph cluster_build {
    label="ISO Build (optional)";
    style="rounded";
    color="#444444";
    fontcolor="white";
    build_start [label="Run BUILD-SYNOS-ISO.zsh\n• Source disk & package configs\n• Print build summary & confirm\n• Run mkarchiso to create ISO"];
    iso_ready   [shape=oval, fillcolor="#400101", label="ISO ready"];
    build_start -> iso_ready [label="mkarchiso"];
    file_syn_disk -> build_start [style=dotted, color="#888888", label="disk vars"];
    file_syn_pkg  -> build_start [style=dotted, color="#888888", label="packages"];
    synstall -> build_start [style=dotted, color="#888888", label="packages array"];
    disk_vars -> build_start [style=dotted, color="#888888", label="disk vars"];
    download_iso -> iso_ready [style=dashed, color="#888888", label="pre-built ISO"];
  }

  // Stage 0
  subgraph cluster_stage0 {
    label="Stage 0";
    style="rounded";
    color="#444444";
    fontcolor="white";
    load_cfg   [label="Source configs"];
    detect_fw [shape=diamond, label="Detect firmware"];
    env_prep  [label="Set keyboard etc."];
    disk_proc [shape=diamond, label="Partition & format\ndisk"];
    mount_fs  [label="Mount partitions"];
    boot_pkgs [shape=note, fillcolor="#260101", label="Choose boot pkgs"];
    combine   [shape=note, fillcolor="#260101", label="Combine SYNSTALL + boot pkgs"];
    pacstrap  [label="pacstrap -K /mnt combined pkgs"];
    copy_files [label="Create fstab\ncopy overlay & scripts"];
    chroot    [shape=oval, fillcolor="#400101", label="arch-chroot /mnt\nrun stage1"];

    load_cfg -> detect_fw -> env_prep -> disk_proc -> mount_fs;
    mount_fs -> boot_pkgs -> combine -> pacstrap -> copy_files -> chroot;

    disk_vars -> disk_proc [style=dotted, color="#888888", label="feeds"];
    synstall  -> combine   [style=dotted, color="#888888", label="feeds"];
    dotfiles -> copy_files [style=dotted, color="#888888", label="copied into /mnt & /etc/skel"];
  }

  // Stage 1 variables
  stage1_vars [shape=note, fillcolor="#260101", label="Stage 1 vars:\nDEFAULT_USER_990=syntax990 (editable)\nFINAL_HOSTNAME_990=SYN-TESTBUILD\nLOCALE_GEN_990=en_GB.UTF-8 UTF-8\nLOCALE_CONF_990=LANG=en_GB.UTF-8\nZONE_INFO990=GB\nSHELL_CHOICE_990=/bin/zsh\nNETWORK_INTERFACE_990=(detected)"];

  // Stage 1
  subgraph cluster_stage1 {
    label="Stage 1";
    style="rounded";
    color="#444444";
    fontcolor="white";
    set_vars   [label="Apply Stage1 vars"];
    config     [label="Write locale & host files"];
    add_user   [label="useradd syntax990\nset password"];
    enable_net [label="Enable dhcpcd & iwd"];
    choose_boot [shape=diamond, label="UEFI → systemd-boot\nMBR → Syslinux"];
    microcode  [label="Install microcode & extras"];
    finish1    [shape=oval, fillcolor="#400101", label="Exit & reboot"];

    set_vars -> config -> add_user -> enable_net -> choose_boot -> microcode -> finish1;
    stage1_vars -> set_vars [style=dotted, color="#888888", label="feeds"];
  }

  // Boot & desktop session
  subgraph cluster_boot {
    label="Boot & Desktop";
    style="rounded";
    color="#444444";
    fontcolor="white";
    login      [label="Login as syntax990"];
    update     [label="Update packages"];
    startx     [shape=oval, fillcolor="#400101", label="startx"];
    xinit      [label=".xinitrc:\nmerge resources,\nsetxkbmap,\nexec openbox & xcompmgr"];
    ob_start   [label="Openbox autostart:\nwallpaper,\nlaunch polybar"];
    poly_launch [label="Polybar launch"];

    login -> update -> startx -> xinit -> ob_start -> poly_launch;
  }

  // Help notes
  help_disk  [shape=note, fillcolor="#260101", label="Edit disk vars in syn-disk-config.zsh.\nChanging FS or adding partitions\nrequires editing disk_processing()."];
  help_pkgs  [shape=note, fillcolor="#260101", label="Add/remove packages by editing\neach array in syn-packages.zsh."];
  help_stage1 [shape=note, fillcolor="#260101", label="Change user & hostname in syn-stage1.zsh."];
  help_wm    [shape=note, fillcolor="#260101", label="Edit .xinitrc to change WM/compositor;\nedit openbox autostart to change bar."];
  help_dotfiles [shape=note, fillcolor="#260101", label="DotfileOverlay supplies\nxinitrc, Openbox & Polybar configs.\nEdit files in this directory\nto customise your desktop."];

  help_disk  -> disk_proc [style=dotted, color="#888888"];
  help_pkgs  -> synstall  [style=dotted, color="#888888"];
  help_stage1 -> set_vars  [style=dotted, color="#888888"];
  help_wm    -> xinit     [style=dotted, color="#888888"];
  help_wm    -> ob_start  [style=dotted, color="#888888"];
  help_dotfiles -> dotfiles [style=dotted, color="#888888"];

  // Connect clusters and build
  run_alias -> load_cfg   [label="exec syn-stage0.zsh"];
  iso_ready -> load_cfg   [label="boot ISO"];
  download_iso -> load_cfg [style=dashed, color="#888888", label="boot ISO"];
  chroot    -> set_vars   [label="run stage1"];
  finish1   -> login      [label="boot installed system"];

  // Connections from file boxes to Stage 0 and Stage 1 steps
  file_syn_disk -> load_cfg [style=dotted, color="#888888", label="config file"];
  file_syn_pkg  -> load_cfg [style=dotted, color="#888888", label="packages file"];
  file_stage0   -> load_cfg [style=dotted, color="#888888", label="Stage 0 script"];
  file_stage0 -> detect_fw   [style=dotted, color="#888888"];
  file_stage0 -> env_prep    [style=dotted, color="#888888"];
  file_stage0 -> disk_proc   [style=dotted, color="#888888"];
  file_stage0 -> mount_fs    [style=dotted, color="#888888"];
  file_stage0 -> boot_pkgs   [style=dotted, color="#888888"];
  file_stage0 -> combine     [style=dotted, color="#888888"];
  file_stage0 -> pacstrap    [style=dotted, color="#888888"];
  file_stage0 -> copy_files  [style=dotted, color="#888888"];
  file_stage0 -> chroot      [style=dotted, color="#888888"];

  file_stage1 -> set_vars    [style=dotted, color="#888888", label="Stage 1 script"];
  file_stage1 -> config      [style=dotted, color="#888888"];
  file_stage1 -> add_user    [style=dotted, color="#888888"];
  file_stage1 -> enable_net  [style=dotted, color="#888888"];
  file_stage1 -> choose_boot [style=dotted, color="#888888"];
  file_stage1 -> microcode   [style=dotted, color="#888888"];
  file_stage1 -> finish1     [style=dotted, color="#888888"];
  file_stage1_vars -> set_vars [style=dotted, color="#888888", label="variables file"];

  file_xinitrc      -> xinit     [style=dotted, color="#888888", label="from overlay"];
  file_ob_autostart -> ob_start  [style=dotted, color="#888888", label="from overlay"];
  file_poly_launch  -> poly_launch [style=dotted, color="#888888", label="from overlay"];
  file_poly_config  -> poly_launch [style=dotted, color="#888888", label="from overlay"];

  // Link dotfiles to runtime files
  dotfiles -> file_xinitrc      [style=dotted, color="#888888"];
  dotfiles -> file_ob_autostart [style=dotted, color="#888888"];
  dotfiles -> file_poly_launch  [style=dotted, color="#888888"];
  dotfiles -> file_poly_config  [style=dotted, color="#888888"];
}
